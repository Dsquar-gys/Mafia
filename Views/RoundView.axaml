<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:Mafia.ViewModels"
             xmlns:models="using:Mafia.Models"
             xmlns:v="clr-namespace:Mafia.Views"
             mc:Ignorable="d"
             d:DesignWidth="800"
             d:DesignHeight="450"
             x:Class="Mafia.Views.RoundView"
             x:DataType="vm:RoundViewModel">
    
    <Design.DataContext>
        <vm:RoundViewModel />
    </Design.DataContext>
    
    <Grid RowDefinitions="Auto, *">
		
		<!-- Header -->
		<Grid Grid.Row="0"
			  ColumnDefinitions="*,*,*"
			  Margin="15">
			
			<StackPanel Grid.Column="0"
			            Orientation="Horizontal"
			            Spacing="20">
				<Border Padding="5"
				        Background="RoyalBlue"
				        CornerRadius="5">
					<ScrollViewer HorizontalScrollBarVisibility="Hidden"
					              MaxWidth="200">
						<TextBlock Name="MasterNameDisplay"
						           VerticalAlignment="Center"
						           Foreground="White"
						           Text="{Binding Source={x:Static models:Statistic.MasterNameProperty}}"/>
					</ScrollViewer>
				</Border>
			</StackPanel>
			
			<Label Grid.Column="1"
			       HorizontalAlignment="Center">Round</Label>
			
			<Button Grid.Column="2"
			        Content="End session"
			        Command="{Binding EndSessionCommand}"
			        CommandParameter="{x:Static models:GameOver.None}"/>
			
		</Grid>
		
		<!-- Body -->
		<Border Grid.Row="1"
				Background="RoyalBlue">
			
			<Grid>
                
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" MinWidth="200" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" MinWidth="200" />
				</Grid.ColumnDefinitions>
                
				<!-- Splitters -->
				<GridSplitter Grid.Column="1" />
				
				<!-- Content -->
				<ListBox Grid.Column="0"
				         Name="PlayersList"
				         ItemsSource="{Binding Players}"
				         AutoScrollToSelectedItem="False"
				         Background="Transparent"
				         SelectedValue="{Binding CurrentPlayer, Mode=OneWay}">
					
					<Interaction.Behaviors>
						<EventTriggerBehavior EventName="SelectionChanged">
							<ChangePropertyAction PropertyName="SelectedValue"
							                          Value="{Binding CurrentPlayer}"/>
						</EventTriggerBehavior>
					</Interaction.Behaviors>
					
					<ListBox.ItemTemplate>
						<DataTemplate>
							<Grid ColumnDefinitions="*, Auto">
								<Border Grid.Column="0"
								        Background="White"
								        Padding="10"
								        Margin="0,5"
								        CornerRadius="10">
									<Grid ColumnDefinitions="Auto, Auto, *, Auto">
										<TextBlock Grid.Column="0"
										           Text="{Binding Number, Converter={StaticResource IntegerConverter}}"
										           VerticalAlignment="Center"
										           Margin="8,0"/>
										<TextBlock Grid.Column="1"
										           Text="{Binding Nickname}"
										           VerticalAlignment="Center"
										           HorizontalAlignment="Center"/>
										<ListBox Grid.Column="2"
										         Theme="{DynamicResource CheckGroupListBox}"
										         HorizontalAlignment="Right"
										         VerticalAlignment="Center"
										         SelectionMode="3">
											
											<Interaction.Behaviors>
												<EventTriggerBehavior EventName="SelectionChanged">
													<InvokeCommandAction Command="{Binding $parent[v:RoundView].((vm:RoundViewModel)DataContext).AddFoul}"
													                     CommandParameter="{Binding .}"/>
												</EventTriggerBehavior>
											</Interaction.Behaviors>
										
											<ListBoxItem Content="Foul" />
											<ListBoxItem Content="Foul" />
											<ListBoxItem Content="Foul" />
										
											<ListBox.Styles>
												
												<Style Selector="ListBoxItem">
													<Setter Property="Margin" Value="10, 0" />
													<Setter Property="VerticalAlignment" Value="Center" />
												</Style>
												
												<Style Selector="ListBoxItem[IsSelected=True]">
													<Setter Property="IsEnabled" Value="False" />
												</Style>
												
											</ListBox.Styles>
										
										</ListBox>
										<Button Grid.Column="3"
										        Content="Kill"
										        Classes="Danger"
										        Command="{Binding $parent[v:RoundView].((vm:RoundViewModel)DataContext).KickPlayer}"
										        CommandParameter="{Binding .}"/>
										
									</Grid>
								</Border>
								<Border Grid.Column="1"
								        Background="White"
								        Padding="10"
								        Margin="10,5"
								        CornerRadius="10">
									<RadioButton VerticalAlignment="Center"
									             Content="Nominated">
										
										<Interaction.Behaviors>
											<EventTriggerBehavior EventName="Click">
												<InvokeCommandAction Command="{Binding $parent[v:RoundView].((vm:RoundViewModel)DataContext).AddCandidate}"
												                     CommandParameter="{Binding .}"/>
											</EventTriggerBehavior>
										</Interaction.Behaviors>
										
									</RadioButton>
								</Border>
							</Grid>
						</DataTemplate>
					</ListBox.ItemTemplate>
					
					<ListBox.Styles>
						
						<!--  Selected state  -->
						<Style Selector="ListBoxItem:selected /template/ ContentPresenter">
							<Setter Property="Background" Value="LightSteelBlue" />
						</Style>
						
					</ListBox.Styles>
					
				</ListBox>
				
				<!-- Side -->
				<Grid Grid.Column="2">
					
					<Grid.RowDefinitions>
						<RowDefinition Height="*" MinHeight="200" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" MinHeight="200" />
					</Grid.RowDefinitions>
					
					<!-- Splitter -->
					<GridSplitter Grid.Row="1" />
					
					<!-- Timer -->
					<StackPanel Grid.Row="0"
					            Orientation="Vertical"
					            HorizontalAlignment="Center"
					            VerticalAlignment="Center"
					            Spacing="10">
						<Border CornerRadius="5"
						        Background="White"
						        Padding="10">
							<TextBlock FontSize="50"
							           Text="{Binding TimeDisplay}"/>
						</Border>
						<Button Theme="{DynamicResource SolidButton}"
						        Classes="Success"
						        Name="PlayPause"
						        Content="Play"
						        Command="{Binding SwitchTimer}"/>
					</StackPanel>
					
					<!-- Candidates -->
					<StackPanel Grid.Row="2"
					            Spacing="5">
						
						<TextBlock Foreground="White"
						           TextAlignment="Center"
						           Text="Nominated players"/>
						
						<ListBox ItemsSource="{Binding NominatedPlayers}">
							<ListBox.ItemTemplate>
								<DataTemplate>
									<Border Background="White"
									        Padding="10"
									        Margin="0,2"
									        CornerRadius="10">
									
										<Grid ColumnDefinitions="Auto, Auto, *">
											<TextBlock Grid.Column="0"
											           Text="{Binding Number, Converter={StaticResource IntegerConverter}}"
											           VerticalAlignment="Center"
											           Margin="8,0"/>
											<TextBlock Grid.Column="1"
											           Text="{Binding Nickname}"
											           VerticalAlignment="Center"
											           HorizontalAlignment="Center"/>
											<Button Grid.Column="2"
											        HorizontalAlignment="Right"
											        Content="Kick"
											        Classes="Danger"
											        Command="{Binding $parent[v:RoundView].((vm:RoundViewModel)DataContext).KickPlayer}"
											        CommandParameter="{Binding .}"/>
										</Grid>
									
									</Border>
								</DataTemplate>
							</ListBox.ItemTemplate>
						
							<ListBox.Styles>
								<Style Selector="ListBoxItem:selected">
									<Setter Property="IsSelected" Value="False"/>
								</Style>
							</ListBox.Styles>
						
						</ListBox>
					</StackPanel>
					
				</Grid>
			</Grid>
			
		</Border>

		<!-- Styles -->
		<Grid.Styles>
			<Style Selector="Button">
				<Setter Property="HorizontalAlignment" Value="Center" />
			</Style>
		</Grid.Styles>
		
	</Grid>
    
</UserControl>
